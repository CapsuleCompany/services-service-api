# Generated by Django 5.1.4 on 2025-01-24 15:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("service", "0005_remove_service_terms_and_conditions_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Provider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_id",
                    models.CharField(
                        help_text="The ID of the user managing this provider (obtained from JWT).",
                        max_length=255,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the provider (e.g., business name).",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="A description of the provider's business.",
                    ),
                ),
                (
                    "logo",
                    models.CharField(
                        blank=True,
                        help_text="Logo of the provider.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        help_text="Contact email for this provider.",
                        max_length=254,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Contact phone number for the provider.",
                        max_length=15,
                    ),
                ),
                (
                    "address",
                    models.UUIDField(
                        blank=True,
                        help_text="A reference to the provider's primary address in the location microservice.",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.RemoveField(
            model_name="service",
            name="provider_id",
        ),
        migrations.AddField(
            model_name="service",
            name="service_range_mi",
            field=models.FloatField(
                blank=True,
                help_text="Service range in miles from the specified location.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="availability_end",
            field=models.TimeField(
                blank=True, help_text="Service availability end time.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="availability_start",
            field=models.TimeField(
                blank=True, help_text="Service availability start time.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="category",
            field=models.CharField(
                default="other", help_text="Category of the service.", max_length=50
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="description",
            field=models.TextField(blank=True, help_text="Description of the service."),
        ),
        migrations.AlterField(
            model_name="service",
            name="duration_minutes",
            field=models.PositiveIntegerField(
                blank=True, help_text="Duration of the service in minutes.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="image",
            field=models.CharField(
                blank=True,
                help_text="Image representing the service.",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="is_available",
            field=models.BooleanField(
                default=True, help_text="Indicates whether the service is available."
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="location",
            field=models.UUIDField(
                blank=True,
                help_text="Reference to the service location in the location microservice.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="max_clients_per_slot",
            field=models.PositiveIntegerField(
                default=1, help_text="Maximum number of clients allowed per time slot."
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="name",
            field=models.CharField(help_text="Name of the service.", max_length=255),
        ),
        migrations.AlterField(
            model_name="service",
            name="price",
            field=models.DecimalField(
                decimal_places=2, help_text="Price of the service.", max_digits=10
            ),
        ),
        migrations.AlterField(
            model_name="serviceoption",
            name="is_required",
            field=models.BooleanField(
                default=False, help_text="Indicates if this option is required."
            ),
        ),
        migrations.AlterField(
            model_name="serviceoption",
            name="max_selections",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Maximum number of selections allowed for this option.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="serviceoption",
            name="name",
            field=models.CharField(
                help_text="Name of the option (e.g., 'Choose a size').", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="serviceoptionvalue",
            name="additional_price",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Additional price for this option value.",
                max_digits=10,
            ),
        ),
        migrations.AlterField(
            model_name="serviceoptionvalue",
            name="name",
            field=models.CharField(
                help_text="Name of the value (e.g., 'Large', 'Medium').", max_length=255
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="provider",
            field=models.ForeignKey(
                default=1,
                help_text="The provider offering this service.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="services",
                to="service.provider",
            ),
            preserve_default=False,
        ),
    ]
